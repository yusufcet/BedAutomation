@model BedAutomation.Models.VitalSign

@{
    ViewData["Title"] = "New Vital Sign Measurement";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-8 mx-auto">
            <div class="card">
                <div class="card-header">
                    <h4><i class="fas fa-heartbeat me-2"></i>Add New Vital Sign Measurement</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" id="vitalSignForm">
                        <div class="row g-3">
                            <!-- Patient Selection -->
                            <div class="col-md-6">
                                <label asp-for="PatientId" class="form-label">Patient *</label>
                                <select asp-for="PatientId" class="form-select" asp-items="ViewBag.Patients">
                                    <option value="">Select a patient...</option>
                                </select>
                                <span asp-validation-for="PatientId" class="text-danger"></span>
                            </div>

                            <!-- Vital Sign Type Selection -->
                            <div class="col-md-6">
                                <label asp-for="VitalSignTypeId" class="form-label">Vital Sign Type *</label>
                                <select asp-for="VitalSignTypeId" class="form-select" asp-items="ViewBag.VitalSignTypes">
                                    <option value="">Select vital sign type...</option>
                                </select>
                                <span asp-validation-for="VitalSignTypeId" class="text-danger"></span>
                            </div>

                            <!-- Numeric Value -->
                            <div class="col-md-6">
                                <label asp-for="Value" class="form-label">Numeric Value *</label>
                                <input asp-for="Value" class="form-control" placeholder="Enter numeric value..." step="0.01" />
                                <span asp-validation-for="Value" class="text-danger"></span>
                                <small class="form-text text-muted">For single numeric values</small>
                            </div>

                            <!-- String Value -->
                            <div class="col-md-6">
                                <label asp-for="StringValue" class="form-label">Complex Value</label>
                                <input asp-for="StringValue" class="form-control" placeholder="e.g., 120/80, Normal, etc." />
                                <span asp-validation-for="StringValue" class="text-danger"></span>
                                <small class="form-text text-muted">For complex values like blood pressure</small>
                            </div>

                            <!-- Status -->
                            <div class="col-md-6">
                                <label asp-for="Status" class="form-label">Status *</label>
                                <select asp-for="Status" class="form-select" asp-items="ViewBag.StatusList">
                                    <option value="">Select status...</option>
                                </select>
                                <span asp-validation-for="Status" class="text-danger"></span>
                            </div>

                            <!-- Measurement Date -->
                            <div class="col-md-6">
                                <label asp-for="MeasurementDate" class="form-label">Measurement Date *</label>
                                <input asp-for="MeasurementDate" type="datetime-local" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" />
                                <span asp-validation-for="MeasurementDate" class="text-danger"></span>
                            </div>

                            <!-- Measured By -->
                            <div class="col-md-6">
                                <label asp-for="MeasuredBy" class="form-label">Measured By</label>
                                <input asp-for="MeasuredBy" class="form-control" placeholder="Nurse/Doctor name..." />
                                <span asp-validation-for="MeasuredBy" class="text-danger"></span>
                            </div>

                            <!-- Location -->
                            <div class="col-md-6">
                                <label asp-for="Location" class="form-label">Location</label>
                                <input asp-for="Location" class="form-control" placeholder="Room, Ward, Department..." />
                                <span asp-validation-for="Location" class="text-danger"></span>
                            </div>

                            <!-- Verification Status -->
                            <div class="col-md-12">
                                <div class="form-check">
                                    <input asp-for="IsVerified" class="form-check-input" type="checkbox" />
                                    <label asp-for="IsVerified" class="form-check-label">
                                        Verified Measurement
                                    </label>
                                </div>
                            </div>

                            <!-- Notes -->
                            <div class="col-md-12">
                                <label asp-for="Notes" class="form-label">Notes</label>
                                <textarea asp-for="Notes" class="form-control" rows="4" placeholder="Additional notes or observations..."></textarea>
                                <span asp-validation-for="Notes" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between mt-4">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-1"></i>Back to List
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-1"></i>Save Measurement
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Set default measurement date
        document.addEventListener('DOMContentLoaded', function() {
            const now = new Date();
            const isoString = now.toISOString().slice(0, 16);
            
            if (!document.getElementById('MeasurementDate').value) {
                document.getElementById('MeasurementDate').value = isoString;
            }
            
            // Auto-fill measured by with current user if available
            const currentUser = '@User.Identity.Name';
            const measuredByField = document.getElementById('MeasuredBy');
            if (!measuredByField.value && currentUser) {
                measuredByField.value = currentUser;
            }
        });

        // Auto-determine status based on vital sign type and value
        document.getElementById('VitalSignTypeId').addEventListener('change', function() {
            updateStatusSuggestion();
        });
        
        document.getElementById('Value').addEventListener('input', function() {
            updateStatusSuggestion();
        });

        function updateStatusSuggestion() {
            const vitalSignTypeId = document.getElementById('VitalSignTypeId').value;
            const value = parseFloat(document.getElementById('Value').value);
            const statusSelect = document.getElementById('Status');
            
            if (!vitalSignTypeId || isNaN(value)) return;
            
            // Basic vital sign ranges (can be enhanced with database lookup)
            let suggestedStatus = 'Normal';
            
            const vitalSignTypeText = document.getElementById('VitalSignTypeId').selectedOptions[0]?.text?.toLowerCase();
            
            if (vitalSignTypeText?.includes('temperature') || vitalSignTypeText?.includes('fever')) {
                if (value > 38.0) suggestedStatus = 'High';
                else if (value < 36.0) suggestedStatus = 'Low';
            } else if (vitalSignTypeText?.includes('pulse') || vitalSignTypeText?.includes('heart rate')) {
                if (value > 100) suggestedStatus = 'High';
                else if (value < 60) suggestedStatus = 'Low';
                if (value > 120 || value < 50) suggestedStatus = 'Critical';
            } else if (vitalSignTypeText?.includes('pressure')) {
                // For systolic pressure (simple check)
                if (value > 140) suggestedStatus = 'High';
                else if (value < 90) suggestedStatus = 'Low';
                if (value > 180 || value < 70) suggestedStatus = 'Critical';
            }
            
            // Set the suggested status
            statusSelect.value = suggestedStatus;
        }
    </script>
} 